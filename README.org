#+title: Read Me
#+author: Cam

* What is This?
This is one of my /many/ random projects that start from a "I wonder how hard this would be to do?"

The TL;DR is a parser for a basic language, but that might change over time; it is being written in Common Lisp, using literate programming in Emacs Org mode.

* Why Have Am I Doing This?
Mainly fun.

I've done some literate programming before, but only on a small scale (ie my Emacs config file), so there's that too.

* Is There Any Actual Use Case For This?
Probably not. As with most of what I program, it's more of a personal experiment.

* But What is Literate Programming, And How Do I Run This?
Literate programming is a method of development pioneered by Donald Knuth during the year of 1984. It basically tries make program source and documentation into the same file. In this project, that file is called "parser.org" (because I'm using Emacs Org mode to do literate programming).

The code is generated by taking all of the source code blocks from this file, and putting them together into a single file. This file (within this project "parser.lisp") can then be loaded into a translator (a REPL, a compiler, etc) and used as normal source code.

To compile this project, I generate the source by running "org-babel-tangle" (C-c C-v t), and then loading that into a sly sbcl REPL.

I might try out GitHub's releases page for the raw lisp files, but I also might not.

* Will I Actually Stick to Literate Programming?
Not for now -- I've been working on this project for a few hours now (from planning to writing), and I've found that Lisp doesn't work the best with magit or sly, and those are both really important to my work flow.

I feel like Lisp is readable enough on its own without literacy, so I might go back. But I'm going to turn that off for now...
